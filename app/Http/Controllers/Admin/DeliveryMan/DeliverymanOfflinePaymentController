<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\OfflinePayments;
use App\Models\DeliveryMan;
use App\Models\DeliveryManWallet;
use App\Models\OfflinePaymentMethod;
use Illuminate\Support\Facades\DB;

class DeliverymanOfflinePaymentController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'delivery_man_id' => 'required|exists:delivery_men,id',
            'amount' => 'required|numeric|min:0.01',
            'payment_method_id' => 'required|exists:offline_payment_methods,id',
            'note' => 'nullable|string|max:255',
            // Puedes agregar mÃ¡s validaciones segÃºn tus campos personalizados
        ]);

        DB::beginTransaction();
        try {
            $deliveryMan = DeliveryMan::findOrFail($request->delivery_man_id);
            $wallet = $deliveryMan->wallet;

            // Guarda el pago offline
            $offlinePayment = new OfflinePayments();
            $offlinePayment->order_id = null; // No estÃ¡ ligado a un pedido
            $offlinePayment->delivery_man_id = $deliveryMan->id;
            $offlinePayment->amount = $request->amount;
            $offlinePayment->payment_method_id = $request->payment_method_id;
            $offlinePayment->payment_info = json_encode([
                'method_name' => OfflinePaymentMethod::find($request->payment_method_id)?->method_name,
                // AquÃ­ puedes agregar campos personalizados si los usas
            ]);
            $offlinePayment->customer_note = $request->note;
            $offlinePayment->method_fields = null; // Opcional, agrega si usas campos personalizados
            $offlinePayment->save();

            // Actualiza el balance (wallet) del repartidor
            $wallet->total_earning += $request->amount;
            $wallet->save();

            DB::commit();

            return response()->json([
                'message' => 'Pago offline registrado correctamente.',
                'offline_payment' => $offlinePayment,
                'new_balance' => $wallet->total_earning,
            ], 201);
        } catch (\Exception $e) {
            DB::rollBack();
            return response()->json(['error' => 'Error al registrar el pago offline: ' . $e->getMessage()], 500);
        }
    }
}